apiVersion: argoproj.io/v1alpha1
kind: Sensor
metadata:
  name: kafka-event-source
  namespace: argo-events
spec:
  template:
    serviceAccountName: operate-workflow-sa
  dependencies:
    - name: test-dep
      eventSourceName: kafka
      eventName: example
  triggers:
    - template:
        name: argo-workflow-trigger
        
        argoWorkflow:
          operation: submit
          source:
            resource:
              apiVersion: argoproj.io/v1alpha1
              kind: Workflow
              metadata:
                generateName: onsite-booking-
              spec:
                entrypoint: diamond
                arguments:
                  parameters:
                    - name: message
                      # the value will get overridden by event payload from test-dep
                      value: Processing confirmed onsite events
                templates:
                - name: echo
                  inputs:
                    parameters:
                    - name: message
                  container:
                    image: alpine:3.7
                    command: [echo, "{{inputs.parameters.message}}"]
                - name: diamond
                  inputs:
                    parameters:
                    - name: message 
                  dag:
                    tasks:
                    - name: A
                      template: echo
                      arguments: 
                        parameters: [{name: message, value: "Received : {{inputs.parameters.message}}"}]
                        
                    - name: B
                      dependencies: [A]
                      template: echo
                      arguments:
                        parameters: [{name: message, value: "Making room reservation.."}]
                    - name: C
                      dependencies: [A]
                      template: echo
                      arguments:
                        parameters: [{name: message, value: "Scheduling equipments.."}]
                    - name: D
                      dependencies: [B, C]
                      template: echo
                      arguments:
                        parameters: [{name: message, value: "Sending confirmation.."}]
          parameters:
            - src:
                dependencyName: test-dep
                dataKey: body
              dest: spec.arguments.parameters.0.value